1,把每个绘制图元加到引擎的renderlist，并且动态调度。可以考虑枚举类型为线,三角形等.
0，不停重构。
1，考虑用插件式，微内核。先实现一个小的C++插件系统，学习下x3c，https://sourceforge.net/projects/x3c/，他的博客在https://www.cnblogs.com/rhcad/category/254079.html
2,core部分包含哪些。生成.dll哪些
3，看看鬼火引擎的各部分划分编排方式
4，尽可能完成shader接口，尽快加入shader，其余的可以慢慢调
5，分层的思想。将每个绘制图元都看做一个层。
6，Qt用单文档菜单列表格式。
7，核心编程，看看如何加载各个dll
8，用boost或者stl
9，随时加进去可以加的东西。比如gis
10，加载配置文件的方式来初始化布局，用以动态增删相应的内容
11，添加一个图元基类。通过map绘制这些图元。
12，将算法和算法ui写成dll，动态加载和卸载。
14，每帧绘制的是当前层的图元，当前层是所有绘制层中的一个，通过动态调度来选择当前层，增删上一层与当前层不同的元素。开个线程来判断是否不同。
15，内存管理。
16，Cocos每个类都会有个帧循环的函数，用的监听者模式
17，
